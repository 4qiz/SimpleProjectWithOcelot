// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OrdersApi.Data;

#nullable disable

namespace OrdersApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241019193701_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OrdersApi.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OrderId"));

                    b.HasKey("OrderId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 101
                        },
                        new
                        {
                            OrderId = 102
                        },
                        new
                        {
                            OrderId = 103
                        });
                });

            modelBuilder.Entity("OrdersApi.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 101,
                            Price = 1200.99m,
                            ProductId = 1,
                            ProductName = "Laptop",
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 101,
                            Price = 199.99m,
                            ProductId = 2,
                            ProductName = "Smartphone",
                            Quantity = 2
                        },
                        new
                        {
                            Id = 3,
                            OrderId = 102,
                            Price = 799.99m,
                            ProductId = 3,
                            ProductName = "Headphones",
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            OrderId = 102,
                            Price = 249.99m,
                            ProductId = 4,
                            ProductName = "Smartwatch",
                            Quantity = 1
                        },
                        new
                        {
                            Id = 5,
                            OrderId = 103,
                            Price = 329.99m,
                            ProductId = 5,
                            ProductName = "Tablet",
                            Quantity = 3
                        },
                        new
                        {
                            Id = 6,
                            OrderId = 103,
                            Price = 199.99m,
                            ProductId = 2,
                            ProductName = "Smartphone",
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("OrdersApi.Models.OrderItem", b =>
                {
                    b.HasOne("OrdersApi.Models.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("OrdersApi.Models.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
